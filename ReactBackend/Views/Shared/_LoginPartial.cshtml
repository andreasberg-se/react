@using Microsoft.AspNetCore.Identity

@inject SignInManager<ReactBackendUser> SignInManager
@inject UserManager<ReactBackendUser> UserManager

<ul>
@if (SignInManager.IsSignedIn(User))
{
    <li>
        Account: <a id="manage" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">@UserManager.GetUserName(User)</a>
    
        @if (User.IsInRole("Admin"))
        {
            <span>[Administrator]</span>
        }
        else if (User.IsInRole("Moderator"))
        {
            <span>[Moderator]</span>
        }
        else
        {
            <span>[User]</span>
        }
    </li>
    <li><a asp-controller="Role" asp-action="Index">Change roles</a></li>
    <li>
        <form id="logoutForm" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button id="logout" type="submit">Logout</button>
        </form>
    </li>
}
else
{
    <li>
        <a id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li>
        <a id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>
